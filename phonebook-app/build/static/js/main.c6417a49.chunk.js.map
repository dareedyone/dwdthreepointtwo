{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["Filter","newFilter","doFiltering","value","onChange","PersonForm","handleSubmit","newName","setNewName","setNewNumber","newNumber","onSubmit","e","target","type","Persons","peopleToShow","handleDelete","map","name","number","id","key","onClick","baseUrl","Notification","message","text","className","App","useState","persons","setPersons","setPeopleToShow","setNewFilter","setmessage","useEffect","axios","get","then","res","data","catch","err","console","log","re","RegExp","match","filter","person","test","length","preventDefault","replacer","newPerson","found","find","window","confirm","put","concat","setTimeout","response","error","post","create","extract","arr","delete","destroy","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6417a49.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ newFilter, doFiltering }) => (\r\n  <div>\r\n    Filter shown with: <input value={newFilter} onChange={doFiltering} />\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({\r\n  handleSubmit,\r\n  newName,\r\n  setNewName,\r\n  setNewNumber,\r\n  newNumber,\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        name:{\" \"}\r\n        <input value={newName} onChange={(e) => setNewName(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        number:{\" \"}\r\n        <input\r\n          value={newNumber}\r\n          onChange={(e) => setNewNumber(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ peopleToShow, handleDelete }) => {\r\n  return (\r\n    <div>\r\n      {peopleToShow.map(({ name, number, id }) => (\r\n        <p key={id}>\r\n          {name} {number}{\" \"}\r\n          <button onClick={() => handleDelete(id, name)}>delete</button>\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\nexport const getAll = () => axios.get(baseUrl).then((res) => res.data);\r\n\r\nexport const create = (newPerson) =>\r\n  axios.post(baseUrl, newPerson).then((res) => res.data);\r\nexport const destroy = (id) => axios.delete(`${baseUrl}/${id}`);\r\nexport const replace = (id, replacer) =>\r\n  axios.put(`${baseUrl}/${id}`, replacer).then((res) => res.data);\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message: { text, type } }) => {\r\n  if (text) {\r\n    return <div className={`${type} notif`}>{text}</div>;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Persons from \"./components/Persons\";\r\nimport { getAll, create, destroy, replace } from \"./services/persons\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [peopleToShow, setPeopleToShow] = useState([]);\r\n  const [newFilter, setNewFilter] = useState(\"\");\r\n  const [message, setmessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getAll()\r\n      .then((res) => {\r\n        setPersons(res);\r\n        setPeopleToShow(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n    const found = persons.find(({ name }) => name === newName);\r\n    if (found) {\r\n      let confirm = window.confirm(\r\n        `${newName} is already added to phonebook, replace the old number with a new one ?`\r\n      );\r\n      return (\r\n        confirm &&\r\n        replace(found.id, newPerson)\r\n          .then((res) => {\r\n            setPeopleToShow(\r\n              peopleToShow\r\n                .filter((person) => person.id !== found.id)\r\n                .concat(res)\r\n            );\r\n            setPersons(\r\n              persons.filter((person) => person.id !== found.id).concat(res)\r\n            );\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n            setmessage({\r\n              text: \"Number changed successfully !\",\r\n              type: \"success\",\r\n            });\r\n            setTimeout(() => {\r\n              setmessage(\"\");\r\n            }, 5000);\r\n          })\r\n          .catch((err) => {\r\n            setmessage({\r\n              text: err.response.data.error.message,\r\n              type: \"error\",\r\n            });\r\n            setTimeout(() => {\r\n              setmessage(\"\");\r\n            }, 5000);\r\n          })\r\n      );\r\n    }\r\n\r\n    create(newPerson)\r\n      .then((res) => {\r\n        setPeopleToShow(peopleToShow.concat(res));\r\n        setPersons(persons.concat(res));\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n        setmessage({ text: \"Number added successfully !\", type: \"success\" });\r\n        setTimeout(() => {\r\n          setmessage(\"\");\r\n        }, 5000);\r\n      })\r\n      .catch((err) => {\r\n        setmessage({\r\n          text: err.response.data.error.message,\r\n          type: \"error\",\r\n        });\r\n        setTimeout(() => {\r\n          setmessage(\"\");\r\n        }, 5000);\r\n      });\r\n  };\r\n  const handleDelete = (id, name) => {\r\n    const extract = (arr) => arr.filter((person) => person.id !== id);\r\n    window.confirm(`Delete ${name} ?`) &&\r\n      destroy(id).then(() => {\r\n        setPeopleToShow(extract(peopleToShow));\r\n        setPersons(extract(persons));\r\n      });\r\n  };\r\n\r\n  const doFiltering = (e) => {\r\n    setNewFilter(e.target.value);\r\n    const re = new RegExp(newFilter, \"i\");\r\n    const match = persons.filter((person) => re.test(person.name));\r\n    match.length > 0 ? setPeopleToShow(match) : setPeopleToShow(persons);\r\n  };\r\n\r\n  return (\r\n    <div className=\"phonebook\">\r\n      <main>\r\n        <h2>Phonebook</h2>\r\n        <Notification message={message} />\r\n        <Filter newFilter={newFilter} doFiltering={doFiltering} />\r\n        <h3>Add a new</h3>\r\n        <PersonForm\r\n          handleSubmit={handleSubmit}\r\n          newName={newName}\r\n          setNewName={setNewName}\r\n          setNewNumber={setNewNumber}\r\n          newNumber={newNumber}\r\n        />\r\n        <h3>Numbers</h3>\r\n        <Persons peopleToShow={peopleToShow} handleDelete={handleDelete} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}